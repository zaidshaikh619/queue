import java.util.Scanner;

class CircularQueue {
    private static final int MAX_SIZE = 5;
    private int[] a = new int[MAX_SIZE];
    private int front = -1;
    private int rear = -1;

  
    public void enqueue(int x) {
        if ((rear + 1) % MAX_SIZE == front) {
            System.out.println("Queue is full");
            return;
        }
        if (front == -1) { // first element
            front = rear = 0;
        } else {
            rear = (rear + 1) % MAX_SIZE;
        }
        a[rear] = x;
        System.out.println(x + " enqueued.");
    }

    
    public int dequeue() {
        if (front == -1) {
            System.out.println("Queue is empty");
            return -1;
        }
        int data = a[front];
        if (front == rear) { // last element
            front = rear = -1;
        } else {
            front = (front + 1) % MAX_SIZE;
        }
        System.out.println(data + " dequeued.");
        return data;
    }

    
    public void display() {
        if (front == -1) {
            System.out.println("Queue is empty");
            return;
        }
        System.out.print("Queue: ");
        int i = front;
        while (true) {
            System.out.print(a[i] + " ");
            if (i == rear) break;
            i = (i + 1) % MAX_SIZE;
        }
        System.out.println();
    }
}

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        CircularQueue q = new CircularQueue();
        int choice;

        while (true) {
            System.out.println("\n--- Circular Queue Menu ---");
            System.out.println("1. Enqueue");
            System.out.println("2. Dequeue");
            System.out.println("3. Display");
            System.out.println("4. Exit");
            System.out.print("Enter your choice: ");
            choice = sc.nextInt();

            switch (choice) {
                case 1:
                    System.out.print("Enter element to insert: ");
                    int data = sc.nextInt();
                    q.enqueue(data);
                    break;
                case 2:
                    q.dequeue();
                    break;
                case 3:
                    q.display();
                    break;
                case 4:
                    System.out.println("Exiting...");
                    sc.close();
                    return;
                default:
                    System.out.println("Invalid choice! Try again.");
            }
        }
    }
}
